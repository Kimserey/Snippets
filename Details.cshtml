@model Rubicon.Hero.Web.Models.DetailsSportActivityViewModel
@using Humanizer

@{
    ViewBag.Title = "Event Details";
    var detailsUrl = Url.Action("Details", null, new { sportActivityId = Model.SportActivity.SportActivitytId }, Request.Url.Scheme);
}

@section Head
{
    @*facebook*@
    <meta property="og:title" content="@Model.SportActivity.Title" />
    <meta property="og:image" content="@CdnResource.Public(Model.SportActivity.SportType.ImageUrl)" />
    <meta property="og:site_name" content="Hero" />
    <meta property="og:description" content="@Model.SportActivity.Description" />
    <meta property="og:type" content="rs-hero:post" />

    @*twitter*@
    <meta name="twitter:card" content="summary">
    @{
        string twitterSite = "@thisishero";
    }
    <meta name="twitter:site" content="@twitterSite">
    <meta name="twitter:title" content="@Model.SportActivity.Title">
    <meta name="twitter:description" content="@Model.SportActivity.Description">
    <meta name="twitter:image:src" content="@CdnResource.Public(Model.SportActivity.SportType.ImageUrl)">

    @*google*@
    <meta itemprop="go:headline" content="@Model.SportActivity.Title" />
    <meta itemprop="go:description" content="@Model.SportActivity.Description" />
}

<section class="contentFull">
    <header class="eventHeader">
        <img class="pull-right myevents-header-sporting" src="@Model.SportActivity.SportType.ImageUrl" alt="Sport image" />
        <h1>
            @Model.SportActivity.Title
        </h1>
    </header>
    <div class="eventBody">
        <div class="row">
            <div class="col-sm-6">
                <div class="row eventUsers">
                    <div class="col-sm-6">
                        Organiser:
                        <br />
                        <ul class="setList inlineList userList userListThumbnails border-none">
                            <li>
                                <a href="#">
                                    <img src="@Model.SportActivity.CreatedBy.UserProfileImageUrl" alt="Organizer profile image" title="@Model.SportActivity.CreatedBy.UserName" class="userCircle" />
                                </a>
                            </li>
                        </ul>
                    </div>
                </div>
                <h3>
                    <strong>@Model.SportActivity.StartDate.ToLongDateString()</strong>
                </h3>
                <p>
                    @Model.SportActivity.Place
                </p>
                <h4>
                    <small>Time</small>
                    <strong>@Model.SportActivity.StartDate.ToShortTimeString() - @Model.SportActivity.Duration.Humanize(2)</strong>
                </h4>
            </div>
            <div class="col-sm-6 text-center">
                @if (System.Security.Claims.ClaimsPrincipal.Current.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier) != null
                        && Model.SportActivity.CreatedBy.UserId == new Guid(System.Security.Claims.ClaimsPrincipal.Current.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier).Value)
                        && !Model.IsCancelled)
                {
                    <div>
                        <a href="@Url.Action("Edit", new { sportActivityId = Model.SportActivity.SportActivitytId })" class="btn btn-link">
                            <i class="icon-pencil" style="padding-right:5px"></i>Edit event
                        </a>
                        @Html.ActionLink("Cancel event", "Cancel", new { sportActivityId = Model.SportActivity.SportActivitytId }, new { @class = "btn btn-link text-primary", data_confirm = "Are you sure you want to cancel this event ?" })
                    </div>
                }
                <br />
                @if (!Model.IsCancelled)
                {
                    if (Model.ParticipantId == null)
                    {
                        <div class="form-group">
                            <button class="btn btn-primary btn-block btn-lg" data-ui="toggle-class" data-target=".setAttendBtn" data-toggle-class="hidden">
                                attending ?
                                <i class="icon-arrow-down icon-lg icon-pull-right"></i>
                            </button>
                            <div class="hidden setAttendBtn">
                                @Ajax.ActionLink("Yes, I'll be attending", "Attend",
                                new { sportActivityId = Model.SportActivity.SportActivitytId },
                                new AjaxOptions { HttpMethod = "post", OnFailure = "reloadPage", OnSuccess = "reloadPage" },
                                new { @class = "btn btn-primary btn-block" })
                                @Ajax.ActionLink("No, I won't be attending", "Ignore",
                                new { sportActivityId = Model.SportActivity.SportActivitytId },
                                new AjaxOptions { HttpMethod = "post", OnFailure = "redirectToList", OnSuccess = "redirectToList" },
                                new { @class = "btn btn-primary btn-block" })
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="form-group">
                            <button class="btn btn-primary btn-block btn-lg" data-ui="toggle-class" data-target=".setAttendBtn" data-toggle-class="hidden">
                                Yes, I'll be attending
                                <i class="icon-arrow-down icon-lg icon-pull-right"></i>
                            </button>
                            <div class="hidden setAttendBtn">
                                @Ajax.ActionLink("No, I won't be attending", "Ignore",
                                new { sportActivityId = Model.SportActivity.SportActivitytId, participantId = Model.ParticipantId },
                                new AjaxOptions { HttpMethod = "post", OnFailure = "redirectToList", OnSuccess = "redirectToList" },
                                new { @class = "btn btn-primary btn-block" })
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="form-group">
                        <button class="btn btn-primary btn-block btn-lg" disabled>
                            CANCELLED
                        </button>
                    </div>
                }
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6 col-sm-push-6">
                <div class="row">
                    <div class="col-xs-6 pull-right form-group">
                        <button class="btn btn-default btn-block" onclick="window.location.href='@Url.Action("GetCalIcs", new { sportActivityId = Model.SportActivity.SportActivitytId })'">
                            <i class="icon-Calendar icon-pull-left"></i>
                            add to cal
                        </button>
                    </div>
                    <div class="col-xs-6 form-group">
                        <button class="btn btn-default btn-block set-reminder-btn">
                            <i class=" icon-clock icon-pull-left"></i>
                            set reminder
                        </button>
                    </div>
                </div>
                <div class="row setReminder">
                    <div class="col-xs-9 form-group">
                        <div class="input-group">
                            <input type="text" name="reminderDate" class="form-control hasDatePicker" data-ui="calendar" placeholder="Select date..." />
                            <span class="input-group-addon">
                                <i class="icon-Calendar"></i>
                            </span>
                        </div>
                    </div>
                    <div class="col-xs-3 form-group" style="padding-left:0;">
                        <input type="text" class="reminder-id hidden" />
                        <input type="submit" value="Set" class="btn btn-default btn-block set-reminder-submit" />
                    </div>
                </div>
                <div class="row reminder-display">
                    <div class="col-xs-12 form-group">
                        <span class="reminder-display-span"></span><i class="icon-x-altx-alt reminder-display-remove btn-link"></i>
                    </div>
                </div>
                <h4 class="pull-left">
                    SHARE:
                </h4>
                <ul class="setList inlineList snsSignin snsList" style="display:inline-block">
                    <li>
                        <a href="#" 
                           onclick="FB.ui({ method: 'share', href: '@detailsUrl' }, function (response) { });">
                            <i class="icon-facebook"></i>
                        </a>
                    </li>
                    <li>
                        <a href="@Url.TwitterShare(detailsUrl)" 
                           onclick="javascript: window.open(this.href, '', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600'); return false;">
                            <i class="icon-twitter"></i>
                        </a>
                    </li>
                    <li>
                        <a href="@Url.GoogleShare(detailsUrl)" 
                           onclick="javascript: window.open(this.href, '', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600'); return false;">
                            <i class="icon-g_plus"></i>
                        </a>
                    </li>
                    <li>
                        <a href="@Url.LinkedInShare(detailsUrl, Model.SportActivity.Title, Model.SportActivity.Description)"
                           onclick="javascript: window.open(this.href, '', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600'); return false;">
                            <i class="icon-linkedin"></i>
                        </a>
                    </li>
                    <li class="snsMail">
                        <a href="@Url.EmailShare(detailsUrl, Model.SportActivity.Title)">
                            <i class="icon-mail"></i>
                        </a>
                    </li>
                    @if (Request.Browser.IsMobileDevice)
                    {
                        <li class="snsMail">
                            <div>
                                <a href="@Url.WhatsAppShare(detailsUrl)">
                                    <img src="~/Content/images/whatsapp-logo-color.png" width="40" style="margin-left:-2px" />
                                </a>
                            </div>
                        </li>
                    }
                </ul>
                <br />
                <div>
                    <a href="@Url.Action("Create", new { sportActivityId = Model.SportActivity.SportActivitytId })" class="btn btn-link btn-lg headerAddButton" style="font-size:15px;">
                        <i class="icon-FreindsonHero" style="padding-right:5px;font-size:20px;"></i>Create similar event
                    </a>
                </div>
            </div>
            <div class="col-sm-6 col-sm-pull-6">
                <p>@Model.SportActivity.Description</p>
                <div>
                    <h5 class="margin-none">Requirement:</h5>
                    @if (!Model.SportActivity.IsPrivate)
                    {
                        <div class="row">
                            <div class="col-md-6">
                                <div>
                                    <strong>Min: </strong>@Model.SportActivity.MinimumPlayers.Value
                                </div>
                                <div>
                                    <strong>Max: </strong>@Model.SportActivity.MaximumPlayers.Value
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div>
                                    <strong>Age: </strong>
                                    @if (@Model.SportActivity.AdultOnly)
                                    { <span>18+</span> }
                                    else
                                    { <span>0+</span> }
                                </div>
                                @if (Model.SportActivity.Gender.HasValue)
                                {
                                    <div>
                                        <strong>Gender: </strong>
                                        @if (Model.SportActivity.Gender == Rubicon.Hero.Data.Entity.Models.Gender.Male)
                                        {
                                            <span>Men Only</span>
                                        }
                                        else if (Model.SportActivity.Gender == Rubicon.Hero.Data.Entity.Models.Gender.Female)
                                        {
                                            <span>Women Only</span>
                                        }
                                        else
                                        {
                                            <span>Mixed</span>
                                        }
                                    </div>
                                }
                            </div>
                        </div>
                    }
                    else
                    {
                        <span>No requirement.</span>
                    }
                </div>
                <br />
                <aside class="eventWeather">
                    <div class="desc">
                        Predicted weather:
                        <div class="row">
                            <div class="col-md-4">
                                <img class="weather-img" />
                            </div>
                            <div class="col-md-8">
                                <span class="weather-temp"></span>
                                <br />
                                <span class="weather-description"></span>
                            </div>
                        </div>
                    </div>
                </aside>
                <br />
                <span class="eventPrivacy">
                    <i class="icon-Locked_Private icon-lg"></i>
                    <small class="text-muted">
                        PRIVACY:
                    </small>
                    <strong>
                        @if (Model.SportActivity.IsPrivate)
                        {
                            <span>Friends only</span>
                        }
                        else
                        {
                            <span>Public</span>
                        }
                    </strong>
                </span>
            </div>
        </div>
    </div>
    <div class="eventMapBox">
        <button class="ventMapButton btn btn-default eventMapButton" data-toggle-class="mapClose" data-ui="toggle-class" data-target="eventMapBox">
            <i class="icon-arrow-down-thin"></i>
            <i class="icon-arrow-up-thin"></i>
        </button>
        <div id="map-canvas" class="myevents-googlemap"></div>
    </div>
    <div class="eventBody">
        <div class="row">
            <dl class="eventFriends">
                <dt>
                    INVITED
                </dt>
                <dd>
                    <ul class="setList inlineList userList userListThumbnails border-none">
                        @foreach (var user in Model.Invited)
                        {
                            <li>
                                <a href="@Url.Action("Index", "UserProfile" , new { userid=user.UserId })">
                                    <img src="@user.UserProfileImageUrl" alt="@user.UserName" title="@user.UserName" class="userCircle" />
                                </a>
                            </li>
                        }
                    </ul>
                    <span class="userListThumbnailsText"></span>
                </dd>
                <div class="clearfix"></div>
                <dt>
                    ATTENDING
                </dt>
                <dd>
                    <ul class="setList inlineList userList userListThumbnails border-none">
                        @foreach (var user in Model.Participants)
                        {
                            <li>
                                <a href="@Url.Action("Index", "UserProfile")">
                                    <img src="@user.UserProfileImageUrl" alt="@user.UserName" title="@user.UserName" class="userCircle" />
                                </a>
                            </li>
                        }
                    </ul>
                </dd>
                <div class="clearfix"></div>
                <dt>
                    GROUPS INVITED
                </dt>
                <dd>
                    <ul class="setList inlineList userList userListThumbnails border-none">
                        @foreach (var group in Model.InvitedGroups)
                        {
                            <li>
                                <a href="@Url.Action("Details", "UserGroup", new { groupId = group.Id })">
                                    <span>@group.Name</span>
                                </a>
                            </li>
                        }
                    </ul>
                </dd>
                <div class="clearfix"></div>
            </dl>
        </div>
        <div class="row">
            <div class="border-top"></div>
            @if (Model.FriendInvites.Any())
            {
                <div class="col-sm-6 col-md-6">
                    <h3>Suggested Friends</h3>
                    @foreach (var friend in Model.FriendInvites)
                    {
                        <a href="@friend.ShowDetailsUrl">
                            @{ Html.RenderPartial("InvitationPartial", friend); }
                        </a>
                    }
                </div>
            }
            @if (Model.GroupInvites.Any())
            {
                <div class="col-sm-6 col-md-6">
                    <h3>Suggested Groups</h3>
                    @foreach (var group in Model.GroupInvites)
                    {
                        Html.RenderPartial("InvitationPartial", group);
                    }
                </div>
            }
        </div>
    </div>
</section>

@section styles {
    <style>
        .invitation {
            width: auto;
            height: 60px;
            position: relative;
        }

        .inv-image,
        .inv-description,
        inv-description-zero,
        .inv-invite-btn {
            top: 5px;
            position: absolute;
        }

        .inv-image {
            left: 5px;
            width: 50px;
            height: 50px;
        }

        .inv-description {
            left: 70px;
            top: 20px;
        }

        .inv-description-zero {
            left: 0;
        }

        .inv-invite-btn {
            right: 5px;
            top: 13px;
        }
        
        .reminder-display-remove {
            padding-left:8px;
        }
    </style>
}

@section scripts {
    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBQfZkKfWZFmAdnGffAn5ngfPI46f3JeCA"></script>
    <script type="text/javascript" src="~/Scripts/js/hero.googlemap.js"></script>
    <script type="text/javascript" src="~/Scripts/js/hero.weather.js"></script>
    <script type="text/javascript">
    var reloadPage = function() {
        location.reload();
    };

    var redirectToList = function () {
        window.location = "@(Url.Action("List"))";
    };

    $(document).ready(function () {
        var lat = @(Model.SportActivity.Latitude),
            lng = @(Model.SportActivity.Longitude),
            title = "@Model.SportActivity.Title",
            $reminder_form = $(".setReminder"),
            $reminder_diplay = $(".reminder-display"),
            $reminder_diplay_span = $(".reminder-display-span"),
            $reminder_id = $(".reminder-id")
            $reminder_date = $("input[name='reminderDate']");

        // ----- begin initialize
        hero.googlemap.initialize({
            lat: lat,
            lng: lng,
            zoom:16,
            mapContainer: $("#map-canvas")[0]
        });

        hero.googlemap.addMarker({
            lat: lat,
            lng: lng,
            title: title
        });

        hero.weather.getWeather({
            lat : @(Model.SportActivity.Latitude),
            lng : @(Model.SportActivity.Longitude),
            date : @((int)Math.Truncate(Model.SportActivity.StartDate.Subtract(new DateTime(1970, 1, 1)).TotalSeconds))
            },
            function (err, data) {
                if(err) { return; }

                $(".weather-img").attr("src", data.imgUrl);
                $(".weather-temp").text(data.min + "° - " + data.max + "°");
                $(".weather-description").text(data.description);
            });

        $.get("@Url.Action("GetReminder")",
            {
                sportActivityId : "@(Model.SportActivity.SportActivitytId)",
            },
            function (data) {
                $reminder_form.hide();
                if(data.err) {
                    $reminder_diplay.hide();
                    return;
                }
                
                $reminder_id.val(data.id);
                $reminder_diplay_span.text("Reminder set on " + data.date);
                $reminder_diplay.show();
            }
        );
        // ----- end initialize

        // ----- begin event handlers
        $("[data-confirm]").click(function(){
            var confirm_message = $(this).data("confirm");
            return confirm(confirm_message);
        });

        $(".set-reminder-btn").click(function () {
            $reminder_form.toggle();
        });

        $(".set-reminder-submit").click(function () {
            if (!$reminder_date.val()) {
                return;
            }

            $.post("@Url.Action("SetReminder")",
                {
                    sportActivityId : "@(Model.SportActivity.SportActivitytId)",
                    date : $reminder_date.val().toString()
                },
                function (data) {
                    var reminder_date, reminder_id;

                    if(data.err) {
                        return;
                    }

                    $reminder_form.hide();
                    $reminder_id.val(data.id);
                    $reminder_diplay_span.text("Reminder set on " + data.date);
                    $reminder_diplay.show();
                }
            );
        });

        $(".reminder-display-remove").click(function () {
            if(!$reminder_id.val()) {
                return;
            }

            $.post("@Url.Action("RemoveReminder")",
                {
                    reminderId : $reminder_id.val()
                },
                function (data) {
                    var reminder_date, reminder_id;
                    
                    if(data.err) {
                        return;
                    }

                    $reminder_diplay.hide();
                    $reminder_id.empty();
                    $reminder_diplay_span.empty();
                }
            );
        });
        // ----- end event handlers
                });
    </script>
}
